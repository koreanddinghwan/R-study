# create vector
이름 <- c("aaa", "bbb", "ccc", "ddd")
# create dataframe by vectors
answer_1 <- data.frame(이름, 성별, 취미, 나이)
answer_2 <- data.frame(name, gender, hobby, age)
answer_1
answer_2
# get data from row 2
answer_2[2, ]
cat("\n")
answer_2[["hobby"]]
answer_2$hobby
answer_2[[3]]
answer_2[1:4, 3]
answer_2$"hobby"
cat("\n")
answer_2[4, 3] <- "축구"
answer_2
cat("\n")
df <- read.csv(file = "rain.csv")
df
# create vector
이름 <- c("aaa", "bbb", "ccc", "ddd")
성별 <- c("남자", "여자", "여자", "남자")
취미 <- c("독서", "등산", "게임", "야구")
나이 <- c(25, 23, 28, 29)
name <- c("aaa", "bbb", "ccc", "ddd")
gender <- c("남자", "여자", "여자", "남자")
hobby <- c("독서", "등산", "게임", "야구")
age <- c(25, 23, 28, 29)
# create dataframe by vectors
answer_1 <- data.frame(이름, 성별, 취미, 나이)
answer_2 <- data.frame(name, gender, hobby, age)
answer_1
answer_2
# get data from row 2
answer_2[2, ]
cat("\n")
answer_2[["hobby"]]
answer_2$hobby
answer_2[[3]]
answer_2[1:4, 3]
answer_2$"hobby"
cat("\n")
answer_2[4, 3] <- "축구"
answer_2
cat("\n")
df <- read.csv(file = "rain.csv")
df <- read.csv(file = "rain.csv")
df <- read.csv(file = "rain.csv")
df <- read.csv(file = "rain.csv")
df
cat("\n")
str(df)
# ["hobby"] =>
answer_2["hobby"]
# ["hobby"] =>
answer_2["hobby"]
# ["hobby"] =>
answer_2["hobby"]
# ["hobby"] =>
answer_2["hobby"]
# ["hobby"] =>
answer_2["hobby"]
# ["hobby"] =>
answer_2["hobby"]
answer_2[["hobby"]]
answer_2$hobby
answer_2[[3]]
answer_2[1:4, 3]
answer_2$"hobby"
answer_2[4, 3] <- "축구"
# create vector in korean
이름 <- c("aaa", "bbb", "ccc", "ddd")
성별 <- c("남자", "여자", "여자", "남자")
취미 <- c("독서", "등산", "게임", "야구")
나이 <- c(25, 23, 28, 29)
# create vector in english
name <- c("aaa", "bbb", "ccc", "ddd")
gender <- c("남자", "여자", "여자", "남자")
hobby <- c("독서", "등산", "게임", "야구")
age <- c(25, 23, 28, 29)
# create dataframe by vectors
answer_1 <- data.frame(이름, 성별, 취미, 나이)
answer_2 <- data.frame(name, gender, hobby, age)
answer_1
answer_2
answer_2[2, ]
# ["hobby"] => 열행 정보를 모두 가져온다.
# 데이터만 가져오기위해선 [["hobby"]], $hobby 로 데이터만 추출할 수 있다.
answer_2["hobby"]
answer_2[["hobby"]]
answer_2$hobby
answer_2[[3]]
answer_2[1:4, 3]
answer_2$"hobby"
# 4행 3열 의 데이터를 "축구"로 할당,
answer_2[4, 3] <- "축구"
#출력
answer_2
# 프로젝트 폴더 내의 rain.csv를 가져온다.
df <- read.csv(file = "rain.csv")
# 출력
df
#
class(df)
str(df)
#answer_2["hobby"] => 열과 행 정보를 모두 가져온다.
# 데이터만 가져오기위해선 [["hobby"]], $hobby 로 데이터만 추출할 수 있다.
answer_2[["hobby"]]
answer_2$hobby
answer_2[[3]] #["hobby"] == [3] 과 동일한 의미
answer_2$"hobby" # $hobby는 결국 문자열 형태이므로 $"hobby"와 같은의미
answer_2[1:4, 3] # 벡터 생성 시, c(1:3)처럼 범위를 주었던 것 처럼, 가져올 데이터의 범위도 지정가능
# 4행 3열 의 데이터를 "축구"로 할당,
answer_2[4, 3] <- "축구"
#출력
answer_2
# 프로젝트 폴더 내의 rain.csv를 가져온다.
df <- read.csv(file = "rain.csv")
# 출력
df
# class가 데이터타입을 알려주는데 반해, str은 내부에 어떤 데이터를 가지는지 상세하게 알려준다.
#class(df)
str(df)
# 프로젝트 폴더 내의 rain.csv를 가져온다.
df <- read.csv(file = "rain.csv")
# 출력
df
# class가 데이터타입을 알려주는데 반해, str은 내부에 어떤 데이터를 가지는지 상세하게 알려준다.
#class(df)
str(df)
# create vector in korean
이름 <- c("aaa", "bbb", "ccc", "ddd")
성별 <- c("남자", "여자", "여자", "남자")
취미 <- c("독서", "등산", "게임", "야구")
나이 <- c(25, 23, 28, 29)
# create vector in english
name <- c("aaa", "bbb", "ccc", "ddd")
gender <- c("남자", "여자", "여자", "남자")
hobby <- c("독서", "등산", "게임", "야구")
age <- c(25, 23, 28, 29)
# create dataframe by vectors
answer_1 <- data.frame(이름, 성별, 취미, 나이)
answer_2 <- data.frame(name, gender, hobby, age)
# 출력
answer_1
answer_2
# get data from row 2
answer_2[2, ]
#answer_2["hobby"] => 열과 행 정보를 모두 가져온다.
# 데이터만 가져오기위해선 [["hobby"]], $hobby, [[3]] 으로 데이터만 추출할 수 있다.
answer_2[["hobby"]]
answer_2$hobby
answer_2[[3]]
answer_2$"hobby" # $hobby는 결국 문자열 형태이므로 $"hobby"와 같은의미
answer_2[1:4, 3] # 벡터 생성 시, c(1:3)처럼 범위를 주었던 것 처럼, 가져올 데이터의 범위도 지정가능
# 4행 3열 의 데이터를 "축구"로 할당,
answer_2[4, 3] <- "축구"
#출력
answer_2
# 프로젝트 폴더 내의 rain.csv를 가져온다.
df <- read.csv(file = "rain.csv")
# 출력
df
# class가 데이터타입을 알려주는데 반해, str은 내부에 어떤 데이터를 가지는지 상세하게 알려준다.
#class(df)
str(df)
install.packages("readxl")
install.packages("readxl")
library(readxl)
install.packages("readxl")
install.packages("readxl")
library(readxl)
install.packages("readxl")
install.packages("readxl")
library(readxl)
install.packages("readxl")
install.packages("readxl")
install.packages("readxl")
library(readxl)
install.packages("readxl")
install.packages("readxl")
df_birth = read_excel("birth.xlsx")
df_birth = read_excel("./birth.xlsx")
